{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "applicationGatewayName": {
       "type": "string",
       "metadata": {
            "description": "Name of Application Gateway"
        }
    },
    "publicIPAddressName": {
       "type": "string",
       "metadata": {
            "description": "Name of PublicIPaddress"
        }
    },
    "virtualNetworkName": {
       "type": "string",
       "metadata": {
            "description": "Name of VirtualNetwork"
        }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "ddosProtectionPlan": {
      "type": "string",
      "defaultValue": "ddosclientportals",
      "metadata": {
        "description": "ddos protection plan"
      }
    },
    "managementResourceGroup": {
       "type": "string",
       "metadata": {
            "description": "Name of Management Resource Group (Application Insights and DDos Protection Plan"
        }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "application gateway size"
      }
    },
    "capacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "defaultValue": 2,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "wafEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "WAF Enabled"
      }
    },
    "wafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Prevention",
      "metadata": {
        "description": "WAF Mode"
      }
    },
    "wafRuleSetType": {
      "type": "string",
      "allowedValues": [
        "OWASP"
      ],
      "defaultValue": "OWASP",
      "metadata": {
        "description": "WAF Rule Set Type"
      }
    },
    "wafRuleSetVersion": {
      "type": "string",
      "allowedValues": [
        "2.2.9",
        "3.0"
      ],
      "defaultValue": "3.0",
      "metadata": {
        "description": "WAF Rule Set Version"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "clientPortalFqdn": {
      "type": "string",
      "metadata": {
        "description": "FQDN off the Webapp that needs to be secured"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of Keyvault that needs to be used"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
          "description": "Name of existing Log Analytics workspace to send diagnostic data to"
      }
    },
    "LogRetentionDays": {
          "type": "int",
          "defaultValue": 30,
          "metadata": {
              "description": "Number of days to store diagnostic logs in storage account"
          }
    },
    "dnssuffix": {
       "type": "string",
       "defaultValue": ".westeurope.cloudapp.azure.com",
       "metadata": {
            "description": "Suffix of DNS Name"
        }
    },
    "certData": {
       "type": "securestring",
       "metadata": {
            "description": "Certificate Data"
        }
    },
    "certPw": {
       "type": "securestring",
       "metadata": {
            "description": "Certificate Password"
        }
    }
  },
  "variables": {
    "applicationGatewayName": "[parameters('applicationGatewayName')]",
    "publicIPAddressName": "[parameters('publicIPAddressName')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "subnetName": "subnetitgdev02",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnetName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",
    "applicationGateways_HTTPS_probe": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('applicationGatewayName'),'/probes/BackendhttpsClientportalprobe')]",
    "applicationGateways_HTTP_probe": "[concat('/subscriptions/', subscription().subscriptionId, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('applicationGatewayName'),'/probes/BackendhttpClientportalprobe')]",
    "workspaceid": "[resourceId(subscription().subscriptionId,parameters('ManagementResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
  },
    "resources": [
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicIPAddressName')]",
            "fqdn": "[concat(variables('publicIPAddressName'), parameters('dnssuffix'))]"
          }
        }
      },
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]"
              }
            }
          ],
          "enableDdosProtection": false,
          "enableVmProtection": false
        }
      },
      {
        "apiVersion": "2018-08-01",
        "name": "[variables('applicationGatewayName')]",
        "type": "Microsoft.Network/applicationGateways",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('virtualNetworkName')]",
          "[variables('publicIPAddressName')]"
        ],
        "properties": {
          "sku": {
            "name": "[parameters('applicationGatewaySize')]",
            "tier": "WAF",
            "capacity": "[parameters('capacity')]"
          },
          "sslCertificates": [
            {
              "name": "Clientportalssl",
              "properties": {
                "data": "[parameters('certData')]",
                "password": "[parameters('certPw')]"
              },
              "type": "Microsoft.Network/applicationGateways/sslCertificates"
            }
          ],
          "gatewayIPConfigurations": [
            {
              "name": "appGatewayIpConfig",
              "properties": {
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              },
              "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
            }
          ],
          "frontendIPConfigurations": [
            {
              "name": "appGatewayFrontendIP",
              "properties": {
                "PublicIPAddress": {
                  "privateIPAllocationMethod": "Dynamic",
                  "id": "[variables('publicIPRef')]"
                }
              }
            },
            {
              "name": "[concat('privip', variables('applicationGatewayName'))]",
              "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations",
              "properties": {
                "privateIPAddress": "10.13.0.10",
                "privateIPAllocationMethod": "Static",
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                }
              }
            }
          ],
          "frontendPorts": [
            {
              "name": "appGatewayFrontendPort",
              "properties": {
                "Port": 443
              },
              "type": "Microsoft.Network/applicationGateways/frontendPorts"
            },
            {
              "name": "Httpredirectport",
              "properties": {
                "Port": 80
              },
              "type": "Microsoft.Network/applicationGateways/frontendPorts"
            }
          ],

          "backendAddressPools": [
            {
              "name": "Clientportalpool",
              "properties": {
                "BackendAddresses": [
                  {
                    "Fqdn": "[parameters('clientPortalFqdn')]"
                  }
                ]
              },
              "type": "Microsoft.Network/applicationGateways/backendAddressPools"
            }
          ],
          "backendHttpSettingsCollection": [
            {
              "name": "BackendhttpsClientportal",
              "properties": {
                "Port": 443,
                "Protocol": "Https",
                "CookieBasedAffinity": "Disabled",
                "pickHostNameFromBackendAddress": true,
                "path": null,
                "requestTimeout": 20,
                "probe": {
                  "id": "[variables('applicationGateways_HTTPS_probe')]"
                }
              },
              "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
            },
            {
              "name": "BackendhttpClientportal",
              "properties": {
                "provisioningState": "Succeeded",
                "port": 80,
                "protocol": "Http",
                "cookieBasedAffinity": "Disabled",
                "pickHostNameFromBackendAddress": true,
                "affinityCookieName": "ApplicationGatewayAffinity",
                "path": null,
                "requestTimeout": 20,
                "probe": {
                  "id": "[variables('applicationGateways_HTTP_probe')]"
                }
              },
              "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
            }
          ],
          "httpListeners": [
            {
              "name": "Clientportallistner",
              "properties": {
                "FrontendIPConfiguration": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                },
                "FrontendPort": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
                },
                "Protocol": "Https",
                "SslCertificate": {
                  "Id": "[concat(variables('applicationGatewayID'), '/sslCertificates/Clientportalssl')]"
                }
              },
              "type": "Microsoft.Network/applicationGateways/httpListeners"
            },
            {
            "name": "Httplistner",
              "properties": {
                "FrontendIPConfiguration": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                },
                "FrontendPort": {
                  "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/Httpredirectport')]"
                },
                "Protocol": "Http"
              },
              "type": "Microsoft.Network/applicationGateways/httpListeners"
            }
          ],
          "requestRoutingRules": [
            {
              "Name": "clientportalrule01",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "[concat(variables('applicationGatewayID'), '/httpListeners/Clientportallistner')]"
                },
                "backendAddressPool": {
                  "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/Clientportalpool')]"
                },
                "backendHttpSettings": {
                  "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/BackendhttpsClientportal')]"
                }
              },
              "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
            },
            {
              "Name": "HttpToHttpsRule01",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "[concat(variables('applicationGatewayID'), '/httpListeners/Httplistner')]"
                },
                "redirectConfiguration": {
                  "id": "[concat(variables('applicationGatewayID'), '/redirectConfigurations/HttpToHttpsRule')]"
                }
              },
              "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
            }
          ],
          "probes": [
            {
              "name": "BackendhttpsClientportalprobe",
              "properties": {
                "protocol": "Https",
                "path": "/",
                "interval": 30,
                "timeout": 30,
                "unhealthyThreshold": 3,
                "pickHostNameFromBackendHttpSettings": true,
                "minServers": 0,
                "match": {
                  "body": "",
                  "statusCodes": [
                    "200-399"
                  ]
                }
              },
              "type": "Microsoft.Network/applicationGateways/probes"
            },
            {
              "name": "BackendhttpClientportalprobe",
              "properties": {
                "protocol": "Http",
                "path": "/",
                "interval": 30,
                "timeout": 30,
                "unhealthyThreshold": 3,
                "pickHostNameFromBackendHttpSettings": true,
                "minServers": 0,
                "match": {
                  "body": "",
                  "statusCodes": [
                    "200-399"
                  ]
                }
              },
              "type": "Microsoft.Network/applicationGateways/probes"
            }
          ],
          "redirectConfigurations": [
            {
              "name": "HttpToHttpsRule",
              "properties": {
                  "redirectType": "Permanent",
                  "targetListener": {
                    "id": "[concat(variables('applicationGatewayID'), '/httpListeners/Clientportallistner')]"
                  },
                  "includePath": false,
                  "includeQueryString": false
                  },
              "type": "Microsoft.Network/applicationGateways/redirectConfigurations"
            }
          ],
          "sslPolicy": {
            "policyType": "Custom",
            "minProtocolVersion": "TLSv1_2",
            "cipherSuites": [
              "TLS_RSA_WITH_AES_256_CBC_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
              "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
              "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
              "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_RSA_WITH_AES_256_GCM_SHA384",
              "TLS_RSA_WITH_AES_128_GCM_SHA256",
              "TLS_RSA_WITH_AES_128_CBC_SHA256"
            ]
          },
          "webApplicationFirewallConfiguration": {
            "enabled": "[parameters('wafEnabled')]",
            "firewallMode": "[parameters('wafMode')]",
            "ruleSetType": "[parameters('wafRuleSetType')]",
            "ruleSetVersion": "[parameters('wafRuleSetVersion')]",
            "disabledRuleGroups": []
          },
          "enableHttp2": false
        },
        "resources": [
          {
              "apiVersion": "2015-07-01",
              "type": "providers/diagnosticSettings",
              "name": "Microsoft.Insights/service",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                  "[resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName'))]"
              ],
              "properties": {
                  "workspaceId": "[variables('workspaceId')]",
                  "logs": [
                      {
                          "category": "ApplicationGatewayAccessLog",
                          "enabled": true,
                          "retentionPolicy": {
                              "enabled": true,
                              "days": "[parameters('LogRetentionDays')]"
                          }
                      },
                      {
                          "category": "ApplicationGatewayPerformanceLog",
                          "enabled": true,
                          "retentionPolicy": {
                              "enabled": true,
                              "days": "[parameters('LogRetentionDays')]"
                          }
                      }
                  ],
                  "metrics": [
                      {
                          "timeGrain": "PT1M",
                          "enabled": true,
                          "retentionPolicy": {
                              "enabled": true,
                              "days": "[parameters('LogRetentionDays')]"
                          }
                      }
                  ]
              }
          }
      ]
      }
    ] 
  }